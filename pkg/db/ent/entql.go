// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/NpoolPlatform/third-login-gateway/pkg/db/ent/thirdauth"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/entql"
	"entgo.io/ent/schema/field"
)

// schemaGraph holds a representation of ent/schema at runtime.
var schemaGraph = func() *sqlgraph.Schema {
	graph := &sqlgraph.Schema{Nodes: make([]*sqlgraph.Node, 1)}
	graph.Nodes[0] = &sqlgraph.Node{
		NodeSpec: sqlgraph.NodeSpec{
			Table:   thirdauth.Table,
			Columns: thirdauth.Columns,
			ID: &sqlgraph.FieldSpec{
				Type:   field.TypeUUID,
				Column: thirdauth.FieldID,
			},
		},
		Type: "ThirdAuth",
		Fields: map[string]*sqlgraph.FieldSpec{
			thirdauth.FieldCreatedAt:      {Type: field.TypeUint32, Column: thirdauth.FieldCreatedAt},
			thirdauth.FieldUpdatedAt:      {Type: field.TypeUint32, Column: thirdauth.FieldUpdatedAt},
			thirdauth.FieldDeletedAt:      {Type: field.TypeUint32, Column: thirdauth.FieldDeletedAt},
			thirdauth.FieldAppID:          {Type: field.TypeUUID, Column: thirdauth.FieldAppID},
			thirdauth.FieldThird:          {Type: field.TypeString, Column: thirdauth.FieldThird},
			thirdauth.FieldLogoURL:        {Type: field.TypeString, Column: thirdauth.FieldLogoURL},
			thirdauth.FieldThirdAppKey:    {Type: field.TypeString, Column: thirdauth.FieldThirdAppKey},
			thirdauth.FieldThirdAppSecret: {Type: field.TypeString, Column: thirdauth.FieldThirdAppSecret},
			thirdauth.FieldRedirectURL:    {Type: field.TypeString, Column: thirdauth.FieldRedirectURL},
		},
	}
	return graph
}()

// predicateAdder wraps the addPredicate method.
// All update, update-one and query builders implement this interface.
type predicateAdder interface {
	addPredicate(func(s *sql.Selector))
}

// addPredicate implements the predicateAdder interface.
func (taq *ThirdAuthQuery) addPredicate(pred func(s *sql.Selector)) {
	taq.predicates = append(taq.predicates, pred)
}

// Filter returns a Filter implementation to apply filters on the ThirdAuthQuery builder.
func (taq *ThirdAuthQuery) Filter() *ThirdAuthFilter {
	return &ThirdAuthFilter{taq}
}

// addPredicate implements the predicateAdder interface.
func (m *ThirdAuthMutation) addPredicate(pred func(s *sql.Selector)) {
	m.predicates = append(m.predicates, pred)
}

// Filter returns an entql.Where implementation to apply filters on the ThirdAuthMutation builder.
func (m *ThirdAuthMutation) Filter() *ThirdAuthFilter {
	return &ThirdAuthFilter{m}
}

// ThirdAuthFilter provides a generic filtering capability at runtime for ThirdAuthQuery.
type ThirdAuthFilter struct {
	predicateAdder
}

// Where applies the entql predicate on the query filter.
func (f *ThirdAuthFilter) Where(p entql.P) {
	f.addPredicate(func(s *sql.Selector) {
		if err := schemaGraph.EvalP(schemaGraph.Nodes[0].Type, p, s); err != nil {
			s.AddError(err)
		}
	})
}

// WhereID applies the entql [16]byte predicate on the id field.
func (f *ThirdAuthFilter) WhereID(p entql.ValueP) {
	f.Where(p.Field(thirdauth.FieldID))
}

// WhereCreatedAt applies the entql uint32 predicate on the created_at field.
func (f *ThirdAuthFilter) WhereCreatedAt(p entql.Uint32P) {
	f.Where(p.Field(thirdauth.FieldCreatedAt))
}

// WhereUpdatedAt applies the entql uint32 predicate on the updated_at field.
func (f *ThirdAuthFilter) WhereUpdatedAt(p entql.Uint32P) {
	f.Where(p.Field(thirdauth.FieldUpdatedAt))
}

// WhereDeletedAt applies the entql uint32 predicate on the deleted_at field.
func (f *ThirdAuthFilter) WhereDeletedAt(p entql.Uint32P) {
	f.Where(p.Field(thirdauth.FieldDeletedAt))
}

// WhereAppID applies the entql [16]byte predicate on the app_id field.
func (f *ThirdAuthFilter) WhereAppID(p entql.ValueP) {
	f.Where(p.Field(thirdauth.FieldAppID))
}

// WhereThird applies the entql string predicate on the third field.
func (f *ThirdAuthFilter) WhereThird(p entql.StringP) {
	f.Where(p.Field(thirdauth.FieldThird))
}

// WhereLogoURL applies the entql string predicate on the logo_url field.
func (f *ThirdAuthFilter) WhereLogoURL(p entql.StringP) {
	f.Where(p.Field(thirdauth.FieldLogoURL))
}

// WhereThirdAppKey applies the entql string predicate on the third_app_key field.
func (f *ThirdAuthFilter) WhereThirdAppKey(p entql.StringP) {
	f.Where(p.Field(thirdauth.FieldThirdAppKey))
}

// WhereThirdAppSecret applies the entql string predicate on the third_app_secret field.
func (f *ThirdAuthFilter) WhereThirdAppSecret(p entql.StringP) {
	f.Where(p.Field(thirdauth.FieldThirdAppSecret))
}

// WhereRedirectURL applies the entql string predicate on the redirect_url field.
func (f *ThirdAuthFilter) WhereRedirectURL(p entql.StringP) {
	f.Where(p.Field(thirdauth.FieldRedirectURL))
}
